<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Category"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="OntoUML.ecore#//Classifier/isAbstract"/>
          <value
              body="true"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#CategoryLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern=""
          editorPattern=""
          editPattern="">
        <diagramLabel
            href="OntoUML.gmfgraph#CategoryNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="OntoUML.gmfgraph#Category"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Collective"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#CollectiveLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#CollectiveNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.1"/>
      <diagramNode
          href="OntoUML.gmfgraph#Collective"/>
      <children
          compartment="//@nodes.1/@ownedChild/@compartments.0"
          referencedChild="//@nodes.1/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.1/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Kind"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#KindLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#KindNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.3"/>
      <diagramNode
          href="OntoUML.gmfgraph#Kind"/>
      <children
          compartment="//@nodes.2/@ownedChild/@compartments.0"
          referencedChild="//@nodes.2/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.2/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Mixin"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="OntoUML.ecore#//Classifier/isAbstract"/>
          <value
              body="true"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#MixinLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#MixinNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.4"/>
      <diagramNode
          href="OntoUML.gmfgraph#Mixin"/>
      <children
          compartment="//@nodes.3/@ownedChild/@compartments.0"
          referencedChild="//@nodes.3/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.3/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Mode"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#ModeLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#ModeNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.5"/>
      <diagramNode
          href="OntoUML.gmfgraph#Mode"/>
      <children
          compartment="//@nodes.4/@ownedChild/@compartments.0"
          referencedChild="//@nodes.4/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.4/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Phase"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#PhaseLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#PhaseNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.6"/>
      <diagramNode
          href="OntoUML.gmfgraph#Phase"/>
      <children
          compartment="//@nodes.5/@ownedChild/@compartments.0"
          referencedChild="//@nodes.5/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.5/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Quantity"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#QuantityLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#QuantityNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.7"/>
      <diagramNode
          href="OntoUML.gmfgraph#Quantity"/>
      <children
          compartment="//@nodes.6/@ownedChild/@compartments.0"
          referencedChild="//@nodes.6/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.6/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Relator"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#RelatorLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#RelatorNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.8"/>
      <diagramNode
          href="OntoUML.gmfgraph#Relator"/>
      <children
          compartment="//@nodes.7/@ownedChild/@compartments.0"
          referencedChild="//@nodes.7/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.7/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//Role"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#RoleLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#RoleNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.9"/>
      <diagramNode
          href="OntoUML.gmfgraph#Role"/>
      <children
          compartment="//@nodes.8/@ownedChild/@compartments.0"
          referencedChild="//@nodes.8/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.8/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//RoleMixin"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="OntoUML.ecore#//Classifier/isAbstract"/>
          <value
              body="true"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#RoleMixinLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#RoleMixinNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.10"/>
      <diagramNode
          href="OntoUML.gmfgraph#RoleMixin"/>
      <children
          compartment="//@nodes.9/@ownedChild/@compartments.0"
          referencedChild="//@nodes.9/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.9/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//SimpleDatatype"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#SimpleDatatypeLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#SimpleDatatypeNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.11"/>
      <diagramNode
          href="OntoUML.gmfgraph#SimpleDatatype"/>
      <children
          compartment="//@nodes.10/@ownedChild/@compartments.0"
          referencedChild="//@nodes.10/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.10/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//StructuralDatatype"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#StructuralDatatypeLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#StructuralDatatypeNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.12"/>
      <diagramNode
          href="OntoUML.gmfgraph#StructuralDatatype"/>
      <children
          compartment="//@nodes.11/@ownedChild/@compartments.0"
          referencedChild="//@nodes.11/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.11/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//SubKind"/>
      <labelMappings
          readOnly="true">
        <diagramLabel
            href="OntoUML.gmfgraph#SubKindLabel"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#SubKindNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.13"/>
      <diagramNode
          href="OntoUML.gmfgraph#SubKind"/>
      <children
          compartment="//@nodes.12/@ownedChild/@compartments.0"
          referencedChild="//@nodes.12/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="OntoUML.ecore#//Classifier/attribute"/>
        <ownedChild>
          <domainMetaElement
              href="OntoUML.ecore#//Property"/>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              readOnly="true"
              viewPattern=""
              editorPattern=""
              editPattern="">
            <diagramLabel
                href="OntoUML.gmfgraph#AttributeLabel"/>
            <features
                href="OntoUML.ecore#//NamedElement/name"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <features
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
          </labelMappings>
          <diagramNode
              href="OntoUML.gmfgraph#AttributeLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.12/@ownedChild/@children.0">
        <compartment
            href="OntoUML.gmfgraph#AttributeCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//GeneralizationSet"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="OntoUML.gmfgraph#GeneralizationSetNameLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.0/@tools.2"/>
      <diagramNode
          href="OntoUML.gmfgraph#GeneralizationSet"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <ownedChild>
      <domainMetaElement
          href="OntoUML.ecore#//URML/DerivationRule"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="OntoUML.ecore#//NamedElement/name"/>
          <value
              body="'RuleID'"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          editPattern="">
        <diagramLabel
            href="OntoUML.gmfgraph#RuleIdLabel"/>
        <features
            href="OntoUML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="OntoUML.gmftool#//@palette/@tools.2/@tools.1"/>
      <diagramNode
          href="OntoUML.gmfgraph#Rule"/>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//Characterization"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//StructuralFeature/isReadOnly"/>
            <value
                body="true"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true"
        editPattern="">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#CharacterizationTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.0"/>
    <diagramLink
        href="OntoUML.gmfgraph#Characterization"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//componentOf"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfMetaAttributesLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#ComponentOfTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.1"/>
    <diagramLink
        href="OntoUML.gmfgraph#ComponentOf"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//DatatypeRelationship"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="0"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="-1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/isNavigable"/>
            <value
                body="true"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//NamedElement/name"/>
            <value
                body="'Name'"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true"
        editorPattern="">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#DatatypeRelationshipTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.2"/>
    <diagramLink
        href="OntoUML.gmfgraph#DatatypeRelationship"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//Derivation"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//StructuralFeature/isReadOnly"/>
            <value
                body="true"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#DerivationNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true"
        editPattern="">
      <diagramLabel
          href="OntoUML.gmfgraph#DerivationSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#DerivationTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.3"/>
    <diagramLink
        href="OntoUML.gmfgraph#Derivation"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//FormalAssociation"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//Association/associationEnd3Aux"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/associationEndPositionAux"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/associationEndPositionAux"/>
            <value
                body="2"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//Association/associationEnd"/>
        <value
            body="associationEnd3Aux"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationAssociationEnd1PropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd1PropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationAssociationEnd1PropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd1PropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationAssociationEnd2PropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd2PropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#FormalAssociationAssociationEnd2PropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd2PropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.4"/>
    <diagramLink
        href="OntoUML.gmfgraph#FormalAssociation"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//Association/associationEndAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//Association/associationEndAux2"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//Generalization"/>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.5"/>
    <diagramLink
        href="OntoUML.gmfgraph#Generalization"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/target"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/source"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//MaterialAssociation"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//Association/associationEnd3Aux"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/isDerived"/>
            <value
                body="true"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/associationEndPositionAux"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/isDerived"/>
            <value
                body="true"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//Property/associationEndPositionAux"/>
            <value
                body="2"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//Association/associationEnd"/>
        <value
            body="associationEnd3Aux"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="OntoUML.ecore#//Association/isDerived"/>
        <value
            body="true"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationAssociationEnd1PropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd1PropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationAssociationEnd1PropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd1PropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationAssociationEnd2PropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd2PropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MaterialAssociationAssociationEnd2PropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//Association/associationEnd2PropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.6"/>
    <diagramLink
        href="OntoUML.gmfgraph#MaterialAssociation"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//Association/associationEndAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//Association/associationEndAux2"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//Mediation"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//StructuralFeature/isReadOnly"/>
            <value
                body="true"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/lower"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MediationTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.7"/>
    <diagramLink
        href="OntoUML.gmfgraph#Mediation"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//memberOf"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfMetaAttributesLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#MemberOfTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.8"/>
    <diagramLink
        href="OntoUML.gmfgraph#MemberOf"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//subCollectionOf"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfMetaAttributesLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubCollectionOfTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.9"/>
    <diagramLink
        href="OntoUML.gmfgraph#SubCollectionOf"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//subQuantityOf"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/sourceAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EReference"
                href="OntoUML.ecore#//Property/associationEnd"/>
            <value
                body="null -- I used this Feature Value Spec to be able to create the new Property instance."/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:ReferenceNewElementSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/targetAux2"/>
        <newElementInitializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//MultiplicityElement/upper"/>
            <value
                body="1"/>
          </initializers>
          <initializers
              xsi:type="gmfmap:FeatureValueSpec">
            <feature
                xsi:type="ecore:EAttribute"
                href="OntoUML.ecore#//StructuralFeature/isReadOnly"/>
            <value
                body="true"/>
          </initializers>
          <elementClass
              href="OntoUML.ecore#//Property"/>
        </newElementInitializers>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/source"/>
        <value
            body="sourceAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EReference"
            href="OntoUML.ecore#//DirectedRelationship/target"/>
        <value
            body="targetAux2"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="OntoUML.ecore#//Meronymic/isShareable"/>
        <value
            body="false"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="OntoUML.ecore#//Meronymic/isEssential"/>
        <value
            body="true"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="OntoUML.ecore#//Meronymic/isImmutablePart"/>
        <value
            body="true"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        viewPattern=""
        editorPattern=""
        editPattern="">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfNameLabel"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfMetaAttributesLabel"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfSourcePropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfSourcePropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/sourcePropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfTargetPropertyNameLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyNameLabelAux"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        readOnly="true">
      <diagramLabel
          href="OntoUML.gmfgraph#SubQuantityOfTargetPropertyCardinalitiesLabel"/>
      <features
          href="OntoUML.ecore#//DirectedRelationship/targetPropertyCardinalitiesLabelAux"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.1/@tools.10"/>
    <diagramLink
        href="OntoUML.gmfgraph#SubQuantityOf"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/sourceAux1"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//DirectedRelationship/targetAux1"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/BinaryAssociationAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Condition)  and negative=false and conclusionRule=null"/>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.2/@tools.0"/>
    <diagramLink
        href="OntoUML.gmfgraph#Condition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Condition/conditionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/BinaryAssociationAtom/association"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/BinaryAssociationAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Condition) and negative=true and conclusionRule=null"/>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <diagramLink
        href="OntoUML.gmfgraph#NegatedCondition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Condition/conditionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/BinaryAssociationAtom/association"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/BinaryAssociationAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Conclusion) and conditionRule=null"/>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#ConclusionVar1Label"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#ConclusionVar2Label"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.2/@tools.2"/>
    <diagramLink
        href="OntoUML.gmfgraph#Conclusion"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Conclusion/conclusionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/BinaryAssociationAtom/association"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/ClassifierAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Condition) and (negative = true and conclusionRule = null)"/>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <diagramLink
        href="OntoUML.gmfgraph#NegatedCondition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Condition/conditionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/ClassifierAtom/class"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/ClassifierAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Condition) and (negative = false and conclusionRule = null)"/>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.2/@tools.0"/>
    <diagramLink
        href="OntoUML.gmfgraph#Condition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Condition/conditionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/ClassifierAtom/class"/>
  </links>
  <links>
    <domainMetaElement
        href="OntoUML.ecore#//URML/ClassifierAtom"/>
    <domainSpecialization
        body="oclIsKindOf(Conclusion) and conditionRule=null"/>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#ConclusionVar1Label"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="OntoUML.gmfgraph#ConclusionVar2Label"/>
      <features
          href="OntoUML.ecore#//NamedElement/name"/>
    </labelMappings>
    <containmentFeature
        href="OntoUML.ecore#//Container/InstanciarElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="OntoUML.gmftool#//@palette/@tools.2/@tools.2"/>
    <diagramLink
        href="OntoUML.gmfgraph#Conclusion"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/Conclusion/conclusionRule"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="OntoUML.ecore#//URML/ClassifierAtom/class"/>
  </links>
  <diagram>
    <diagramCanvas
        href="OntoUML.gmfgraph#OntoUML"/>
    <domainModel
        href="OntoUML.ecore#/"/>
    <domainMetaElement
        href="OntoUML.ecore#//Container"/>
    <palette
        href="OntoUML.gmftool#//@palette"/>
  </diagram>
  <audits
      id="OntoUML"
      name="OntoUML"
      description="OntoUML">
    <childContainers
        id="Association"
        name="Association"
        description="Association">
      <audits
          name="AssociationConstraint1*"
          description="As the decorations for MultiplicityElementConstraint3* cannot be shown in a Link Label, this constraint had to be implemented here."
          id="AssociationConstraint1*"
          message="In all association ends of this association, the maximum cardinality constraint (the property&#xA;upper) must be equal or greater to the lower cardinality constraint (the property lower).">
        <rule
            body="self.associationEnd->forAll(x | if (x.lower &lt;> -1) then ((x.upper >= x.lower) or (x.upper = -1)) else (x.upper = -1) endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Association"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Category"
        name="Category"
        description="Category">
      <audits
          name="CategoryConstraint1"
          id="CategoryConstraint1"
          useInLiveMode="true"
          message="A class stereotyped as «category» can only has as supertypes classes stereotyped as «category» or «mixin», because a non-sortal rigid class cannot be a subtype of a sortal class or an anti-rigid class.">
        <rule
            body="if self.specific.oclIsKindOf(Category) then (self.general.oclIsKindOf(Category) or self.general.oclIsKindOf(Mixin)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Characterization"
        name="Characterization"
        description="Characterization">
      <audits
          name="CharacterizationConstraint1"
          id="CharacterizationConstraint1"
          useInLiveMode="true"
          message="A relationship stereotyped as «characterization» must have in its source association end a class stereotyped as «mode» representing the characterizing mode universal.">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.oclIsTypeOf(Mode) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Characterization"/>
        </target>
      </audits>
      <audits
          name="CharacterizationConstraint2"
          id="CharacterizationConstraint2"
          useInLiveMode="true"
          message="The association end connected to the characterized universal must have the cardinality constraints of one and exactly one.">
        <rule
            body="if self.target.oclIsKindOf(Characterization) then ((self.lower = 1) and (self.upper = 1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="CharacterizationConstraint3"
          id="CharacterizationConstraint3"
          useInLiveMode="true"
          message="The association end connected to the characterizing quality universal (source association end) must have the minimum cardinality constraints ≥ 1.">
        <rule
            body="if self.source.oclIsKindOf(Characterization) then ((self.lower >= 1) or (self.lower = -1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="CharacterizationConstraint4"
          id="CharacterizationConstraint4"
          useInLiveMode="true"
          message="The association end connected to the characterized universal must have the property isReadOnly = true.">
        <rule
            body="if self.target.oclIsKindOf(Characterization) then self.isReadOnly else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="CharacterizationConstraint5"
          id="CharacterizationConstraint5"
          message="A relationship stereotyped as «characterization» is always a binary association.">
        <rule
            body="self.relatedElement->size() = 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Characterization"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Collective"
        name="Collective"
        description="Collective">
      <audits
          name="CollectiveConstraint1"
          id="CollectiveConstraint1"
          message="A relationship stereotyped as «collective» in which its property isExtensional is true&#xA;must have all its parts with their respective properties isEssential = true. When the&#xA;property isExtensional = true the collective is said to be extensional and this means&#xA;that all its parts are essential and the change (or destruction) of anyof its parts&#xA;terminates the existence of the collective.">
        <rule
            body="self.isExtensional implies Meronymic.allInstances()->forAll(x | x.source->forAll(y | if y.oclIsKindOf(Property) then if (y.oclAsType(Property).endType = self) then x.isEssential else true endif else false endif))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Collective"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="componentOf"
        name="componentOf"
        description="componentOf">
      <audits
          name="componentOfConstraint1a"
          id="componentOfConstraint1a"
          useInLiveMode="true"
          message="The classes connected to the source association ends of this relation must represent universals whose instances are functional complexes. A universal X is a universal whose instances are functional complexes if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «kind» or be a subtype of a class stereotyped as «kind»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «quantity» or «collective», and Y cannot be a subtype of class stereotyped as either «quantity» or «collective».">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasFunctionalComplexesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//componentOf"/>
        </target>
      </audits>
      <audits
          name="componentOfConstraint1b"
          id="componentOfConstraint1b"
          useInLiveMode="true"
          message="The classes connected to the target association ends of this relation must represent universals whose instances are functional complexes. A universal X is a universal whose instances are functional complexes if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «kind» or be a subtype of a class stereotyped as «kind»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «quantity» or «collective», and Y cannot be a subtype of class stereotyped as either «quantity» or «collective».">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasFunctionalComplexesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//componentOf"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="DatatypeRelationship"
        name="DatatypeRelationship"
        description="DatatypeRelationship">
      <audits
          name="DatatypeRelationshipConstraint1*"
          id="DatatypeRelationshipConstraint1*"
          useInLiveMode="true"
          message="A relationship stereotyped as «datatypeRelationship» must have in its target association end a class stereotyped as «simpleDatatype» or «structuralDatatype», because attributes represent attribute functions derived for quality universals.">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then (x.oclAsType(Property).endType.oclIsKindOf(SimpleDatatype) or x.oclAsType(Property).endType.oclIsKindOf(StructuralDatatype)) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DatatypeRelationship"/>
        </target>
      </audits>
      <audits
          name="DatatypeRelationshipConstraint2*"
          id="DatatypeRelationshipConstraint2*"
          useInLiveMode="true"
          message="A relationship stereotyped as «datatypeRelationship» must have in its source association end an instance of Classifier. Excepting for Generalizations, GeneralizationSets and Properties, all the other OntoUML constructs are Classifiers.">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.oclIsKindOf(Classifier) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DatatypeRelationship"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Derivation"
        name="Derivation"
        description="Derivation">
      <audits
          name="DerivationConstraint1a"
          id="DerivationConstraint1a"
          useInLiveMode="true"
          message="A derivation relation must have one of its association ends (not the black circle end) connected to an association stereotyped as «material».">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.oclIsTypeOf(MaterialAssociation) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Derivation"/>
        </target>
      </audits>
      <audits
          name="DerivationConstraint1b"
          id="DerivationConstraint1b"
          useInLiveMode="true"
          message="A derivation relation must have one of its association ends (the black circle end) connected to a class stereotyped as «relator».">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.oclIsTypeOf(Relator) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Derivation"/>
        </target>
      </audits>
      <audits
          name="DerivationConstraint2"
          id="DerivationConstraint2"
          message="Derivation associations are always binary associations.">
        <rule
            body="self.relatedElement->size() = 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Derivation"/>
        </target>
      </audits>
      <audits
          name="DerivationConstraint3"
          id="DerivationConstraint3"
          useInLiveMode="true"
          message="The black circle end of the derivation relation must have the cardinality constraints of one and exactly one.">
        <rule
            body="if self.target.oclIsKindOf(Derivation) then ((self.lower = 1) and (self.upper = 1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="DerivationConstraint4"
          id="DerivationConstraint4"
          useInLiveMode="true"
          message="The black circle end of the derivation relation must have the property isReadOnly = true.">
        <rule
            body="if self.target.oclIsKindOf(Derivation) then self.isReadOnly else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="DerivationConstraint5"
          id="DerivationConstraint5"
          useInLiveMode="true"
          message="The cardinality constraints of the association end connected to the association stereotyped as «material» in a derivation relation are a product of the cardinality constraints of the relations stereotyped as «mediation» of the class stereotyped as «relator» that this association stereotyped as «material» derives from. However, since the relations stereotyped as «mediation» requires a minimum cardinality of one on both of its association ends, then the minimum cardinality on the end connected to the relation stereotyped as «material» of a derivation relation must also be ≥ 1.">
        <rule
            body="if self.source.oclIsKindOf(Derivation) then ((self.lower >= 1) or (self.lower = -1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="DirectedBinaryRelationship"
        name="DirectedBinaryRelationship"
        description="DirectedBinaryRelationship">
      <audits
          name="DirectedBinaryRelationshipConstraint1"
          description="From the metamodel."
          id="DirectedBinaryRelationshipConstraint1"
          message="An association stereotyped as «characterization», «mediation», «componentOf», «memberOf»,&#xA;«subCollectionOf», «subQuantityOf» or a derivation relation must have its source extremity&#xA;conected to only one element.">
        <rule
            body="self.source->size() = 1 -- From the metamodel."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
      <audits
          name="DirectedBinaryRelationshipConstraint2"
          description="From the metamodel."
          id="DirectedBinaryRelationshipConstraint2"
          message="An association stereotyped as «characterization», «mediation», «componentOf», «memberOf»,&#xA;«subCollectionOf», «subQuantityOf» or a derivation relation must have its target extremity&#xA;conected to only one element.">
        <rule
            body="self.target->size() = 1 -- From the metamodel."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
      <audits
          name="DirectedBinaryRelationshipConstraint3*"
          id="DirectedBinaryRelationshipConstraint3*"
          useInLiveMode="true"
          message="An association stereotyped as «characterization», «mediation», «componentOf», «memberOf»,&#xA;«subCollectionOf», «subQuantityOf» or a derivation relation must have its source extremity&#xA;conected to a Property.">
        <rule
            body="self.source->forAll(x | x.oclIsKindOf(Property))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
      <audits
          name="DirectedBinaryRelationshipConstraint4*"
          id="DirectedBinaryRelationshipConstraint4*"
          useInLiveMode="true"
          message="An association stereotyped as «characterization», «mediation», «componentOf», «memberOf»,&#xA;«subCollectionOf», «subQuantityOf» or a derivation relation must have its target extremity&#xA;conected to a Property.">
        <rule
            body="self.target->forAll(x | x.oclIsKindOf(Property))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
      <audits
          name="DirectedBinaryRelationshipConstraint5a*"
          description="As the decorations for MultiplicityElementConstraint3* cannot be shown in a Link Label, this constraint had to be implemented here."
          id="DirectedBinaryRelationshipConstraint5a*"
          message="The source maximum cardinality constraint (the property upper) must be equal or&#xA;greater to the source lower cardinality constraint (the property lower).">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then (if (x.oclAsType(Property).lower &lt;> -1) then ((x.oclAsType(Property).upper >= x.oclAsType(Property).lower) or (x.oclAsType(Property).upper = -1)) else (x.oclAsType(Property).upper = -1) endif) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
      <audits
          name="DirectedBinaryRelationshipConstraint5b*"
          description="As the decorations for MultiplicityElementConstraint3* cannot be shown in a Link Label, this constraint had to be implemented here."
          id="DirectedBinaryRelationshipConstraint5b*"
          message="The target maximum cardinality constraint (the property upper) must be equal or&#xA;greater to the target lower cardinality constraint (the property lower).">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then (if (x.oclAsType(Property).lower &lt;> -1) then ((x.oclAsType(Property).upper >= x.oclAsType(Property).lower) or (x.oclAsType(Property).upper = -1)) else (x.oclAsType(Property).upper = -1) endif) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DirectedBinaryRelationship"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Generalization"
        name="Generalization"
        description="Generalization">
      <audits
          name="GeneralizationConstraint1"
          id="GeneralizationConstraint1"
          useInLiveMode="true"
          message="A generalization must have its source extremity conected to at maximum one element.">
        <rule
            body="self.source->size() &lt;= 1"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
      <audits
          name="GeneralizationConstraint2"
          id="GeneralizationConstraint2"
          useInLiveMode="true"
          message="A generalization must have its target extremity conected to at maximum one element.">
        <rule
            body="self.target->size() &lt;= 1"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="MaterialAssociation"
        name="MaterialAssociation"
        description="MaterialAssociation">
      <audits
          name="MaterialAssociationConstraint1"
          id="MaterialAssociationConstraint1"
          message="An association stereotyped as «material» must be connected to the association end of exactly&#xA;one derivation relation.">
        <rule
            body="Derivation.allInstances()->one(x | x.source->exists(y | if y.oclIsKindOf(Property) then (y.oclAsType(Property).endType = self) else false endif))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MaterialAssociation"/>
        </target>
      </audits>
      <audits
          name="MaterialAssociationConstraint2"
          id="MaterialAssociationConstraint2"
          useInLiveMode="true"
          message="The cardinality constraints of the association ends of this association are derived from the cardinality constraints of the relations stereotyped as «mediation» which are connected on the class stereotyped as «relator» that this association is derived from. Since the relationships stereotyped as «mediation» requires a minimum cardinality of one on both of its association ends, then the minimum cardinality constraint on each end of the this derived association must also be ≥ 1.">
        <rule
            body="if self.associationEnd.oclIsKindOf(MaterialAssociation) then ((self.lower >= 1) or (self.lower = -1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="MaterialAssociationConstraint3"
          id="MaterialAssociationConstraint3"
          useInLiveMode="true"
          message="An association stereotyped as «material» must have the property isDerived = true.">
        <rule
            body="self.isDerived"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MaterialAssociation"/>
        </target>
      </audits>
      <audits
          name="MaterialAssociationConstraint4*"
          id="MaterialAssociationConstraint4*"
          useInLiveMode="true"
          message="The classes connected on the extremities of an association stereotyped as «material» must also be connected on the extremities of relationships stereotyped as «mediation», and the other extremities of these relationships (stereotyped as «mediation») must be connected to an unique class stereotyped as «relator».">
        <rule
            body="let A:Set(Mediation) = Mediation.allInstances()->select(x | x.target->exists(y | if y.oclIsKindOf(Property) then (self.associationEnd->exists(z | if z.oclIsKindOf(Property) then (y.oclAsType(Property).endType = z.oclAsType(Property).endType) else false endif)) else false endif)) in (A->collect(x | if x.target->forAll(y | y.oclIsKindOf(Property)) then x.target.oclAsType(Property).endType else null endif)->includesAll(if self.associationEnd->forAll(x | x.oclIsKindOf(Property)) then self.associationEnd.oclAsType(Property).endType else null endif) and A->forAll(x | x.source->exists(y | if y.oclIsKindOf(Property) then A->exists(z | (x.target->exists(w | if w.oclIsKindOf(Property) then (z.target->exists(k | if k.oclIsKindOf(Property) then (w.oclAsType(Property).endType &lt;> k.oclAsType(Property).endType) else false endif)) else false endif)) and (z.source->exists(w | if w.oclIsKindOf(Property) then ((y.oclAsType(Property).endType = w.oclAsType(Property).endType) and y.oclAsType(Property).endType.oclIsKindOf(Relator)) else false endif))) else false endif)))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MaterialAssociation"/>
        </target>
      </audits>
      <audits
          name="MaterialAssociationConstraint5*"
          id="MaterialAssociationConstraint5*"
          useInLiveMode="true"
          message="An association stereotyped as «material» must be connected to Properties which have its properties isDerived = true.">
        <rule
            body="if self.associationEnd.oclIsKindOf(MaterialAssociation) then isDerived else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Mediation"
        name="Mediation"
        description="Mediation">
      <audits
          name="MediationConstraint1"
          id="MediationConstraint1"
          useInLiveMode="true"
          message="A relationship stereotyped as «mediation» must have in its source association end a class stereotyped as «relator» representing the corresponding relator universal.">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.oclIsTypeOf(Relator) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Mediation"/>
        </target>
      </audits>
      <audits
          name="MediationConstraint2"
          id="MediationConstraint2"
          useInLiveMode="true"
          message="In a relationship stereotyped as «mediation», the association end connected to the mediated universal must have the minimum cardinality constraints ≥ 1.">
        <rule
            body="if self.target.oclIsKindOf(Mediation) then ((self.lower >= 1) or (self.lower = -1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="MediationConstraint3"
          id="MediationConstraint3"
          useInLiveMode="true"
          message="In a relationship stereotyped as «mediation», the association end connected to the mediated universal must have property isReadOnly = true.">
        <rule
            body="if self.target.oclIsKindOf(Mediation) then self.isReadOnly else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="MediationConstraint4"
          id="MediationConstraint4"
          useInLiveMode="true"
          message="In a relationship stereotyped as «mediation», the association end connected to the relator universal (the class stereotyped as «relator») must have the minimum cardinality constraints ≥ 1.">
        <rule
            body="if self.source.oclIsKindOf(Mediation) then ((self.lower >= 1) or (self.lower = -1)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="MediationConstraint5"
          id="MediationConstraint5"
          message="A relationship stereotyped as «mediation» is always a binary association.">
        <rule
            body="self.relatedElement->size() = 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Mediation"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="memberOf"
        name="memberOf"
        description="memberOf">
      <audits
          name="memberOfConstraint1"
          id="memberOfConstraint1"
          message="This relation can only represent essential parthood (isEssential = true) if the object&#xA;representing the whole on this relation is an extensional (isExtensional = true) individual.&#xA;In this case, all parthood relations in which this individual participates as a whole are&#xA;essential parthood relations.">
        <rule
            body="self.isEssential implies self.source->forAll(x | if x.oclIsKindOf(Property) then (if x.oclAsType(Property).endType.oclIsKindOf(Collective) then x.oclAsType(Property).endType.oclAsType(Collective).isExtensional else false endif) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//memberOf"/>
        </target>
      </audits>
      <audits
          name="memberOfConstraint2a"
          description=""
          id="memberOfConstraint2a"
          useInLiveMode="true"
          message="The classifier connected to association end relative to the whole individual must be a universal whose instances are collectives. A universal X is a universal whose instances are collectives if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «collective» or be a subtype of a class stereotyped as «collective»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «quantity», and Y cannot be a subtype of class stereotyped as either «kind» or «quantity».">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasCollectivesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//memberOf"/>
        </target>
      </audits>
      <audits
          name="memberOfConstraint2b"
          id="memberOfConstraint2b"
          useInLiveMode="true"
          message="The classifier connected to the association end relative to the part can be either a universal whose instances are collectives, or a universal whose instances are functional complexes. A universal X is a universal whose instances are collectives if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «collective» or be a subtype of a class stereotyped as «collective»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «quantity», and Y cannot be a subtype of class stereotyped as either «kind» or «quantity». A universal X is a universal whose instances are functional complexes if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «kind» or be a subtype of a class stereotyped as «kind»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «quantity» or «collective», and Y cannot be a subtype of class stereotyped as either «quantity» or «collective».">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then (x.oclAsType(Property).endType.hasCollectivesInstances() or x.oclAsType(Property).endType.hasFunctionalComplexesInstances()) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//memberOf"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Meronymic"
        name="Meronymic"
        description="Meronymic">
      <audits
          name="MeronymicConstraint1"
          id="MeronymicConstraint1"
          message="A whole must have at least two disjoint parts due to the Weak Supplementation axiom.">
        <rule
            body="Meronymic.allInstances()->select(x | x.source->exists(y | if y.oclIsKindOf(Property) then (self.source->exists(z | if z.oclIsKindOf(Property) then (z.oclAsType(Property).endType = y.oclAsType(Property).endType) else false endif)) else false endif))->collect(w | w.target->collect(k | if k.oclIsKindOf(Property) then (if (k.oclAsType(Property).lower = -1) then 2 else k.oclAsType(Property).lower endif) else 0 endif)->sum())->sum() >= 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
      <audits
          name="MeronymicConstraint2a"
          id="MeronymicConstraint2a"
          useInLiveMode="true"
          message="In a relationship stereotyped as «componentOf», «memberOf», «subCollectionOf» or «subQuantityOf» (i.e., a Meronymic relationship), if the class connected to the association end representing the whole is stereotyped as «phase», «role» or «roleMixin» (i.e., it is an anti-rigid class), then the property isEssential must be false.">
        <rule
            body="(self.source->forAll(x | if x.oclIsKindOf(Property) then (x.oclAsType(Property).endType.oclIsKindOf(AntiRigidSortalClass) or x.oclAsType(Property).endType.oclIsKindOf(AntiRigidMixinClass)) else false endif)) implies (self.isEssential = false)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
      <audits
          name="MeronymicConstraint2b"
          id="MeronymicConstraint2b"
          message="In a relationship stereotyped as «componentOf», «memberOf», «subCollectionOf»&#xA;or «subQuantityOf» (i.e., a Meronymic relationship), if the property&#xA;isEssential = true (in case of a rigid class with essential parts), then the property&#xA;isImmutablePart must also be true.">
        <rule
            body="self.isEssential implies self.isImmutablePart -- Constraint 2 revisited with the new meta-attributes isImmutableWhole and isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
      <audits
          name="MeronymicConstraint5*"
          id="MeronymicConstraint5*"
          message="In a relationship stereotyped as «componentOf», «memberOf», «subCollectionOf»&#xA;or «subQuantityOf» (i.e., a Meronymic relationship), if the property&#xA;isImmutablePart = true, then the Properties connected on its target association&#xA;ends must have the property isReadOnly = true.">
        <rule
            body="self.isImmutablePart implies self.target->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).isReadOnly else false endif) -- Constraint 2 revisited with the new meta-attributes isImmutableWhole and isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
      <audits
          name="MeronymicConstraint6*"
          id="MeronymicConstraint6*"
          message="In a relationship stereotyped as «componentOf», «memberOf», «subCollectionOf»&#xA;or «subQuantityOf» (i.e., a Meronymic relationship), if the property&#xA;isInseparable = true (in case of an anti-rigid class with inseparable parts), then the&#xA;property isImmutableWhole must also be true.">
        <rule
            body="self.isInseparable implies self.isImmutableWhole -- Constraint 2 revisited with the new meta-attributes isImmutableWhole and isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
      <audits
          name="MeronymicConstraint7*"
          id="MeronymicConstraint7*"
          message="In a relationship stereotyped as «componentOf», «memberOf», «subCollectionOf»&#xA;or «subQuantityOf» (i.e., a Meronymic relationship), if the property&#xA;isImmutableWhole = true, then the Properties connected on its source association&#xA;ends must have the property isReadOnly = true.">
        <rule
            body="self.isImmutableWhole implies self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).isReadOnly else false endif) -- Constraint 2 revisited with the new meta-attributes isImmutableWhole and isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Meronymic"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Mixin"
        name="Mixin"
        description="Mixin">
      <audits
          name="MixinConstraint1"
          id="MixinConstraint1"
          useInLiveMode="true"
          message="A class stereotyped as «mixin» cannot have a class stereotyped as «roleMixin» as supertype, because a semi-rigid class cannot specialize an anti-rigid class.">
        <rule
            body="if self.specific.oclIsKindOf(Mixin) then not self.general.oclIsKindOf(RoleMixin) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="MixinClass"
        name="MixinClass"
        description="MixinClass">
      <audits
          name="MixinClassConstraint1"
          id="MixinClassConstraint1"
          useInLiveMode="true"
          message="A class stereotyped as «category», «mixin» or «roleMixin» cannot have as a supertype (must not include in its general collection) a class stereotyped as «kind», «quantity», «collective», «subkind», «phase» or «role» (i.e., a sortal class), because a class representing a non-sortal universal cannot be a subclass of a class representing a sortal.">
        <rule
            body="if self.specific.oclIsKindOf(MixinClass) then not self.general.oclIsKindOf(SortalClass) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
      <audits
          name="MixinClassConstraint2"
          id="MixinClassConstraint2"
          useInLiveMode="true"
          message="A class stereotyped as «category», «mixin» or «roleMixin» must have its property isAbstract = true, because a non-sortal cannot have direct instances.">
        <rule
            body="self.isAbstract = true"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MixinClass"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Mode"
        name="Mode"
        description="Mode">
      <audits
          name="ModeConstraint1"
          id="ModeConstraint1"
          message="A class stereotyped as «mode» must be (directly or indirectly) connected to an&#xA;association end of at least one relationship stereotyped as «characterization».">
        <rule
            body="Characterization.allInstances()->exists(x | x.isConected(self) or self.allSuperTypes()->exists(y | x.isConected(y)))   "/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Mode"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="MultiplicityElement"
        name="MultiplicityElement"
        description="MultiplicityElement">
      <audits
          name="MultiplicityElementConstraint1"
          id="MultiplicityElementConstraint1"
          useInLiveMode="true"
          message="The minimum cardinality constraint (the property lower) must be a cardinal number, where the number -1 represents ℵ0 (aleph-zero), the smallest infinite cardinal number.">
        <rule
            body="(self.lower >= 0) or (self.lower = -1)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MultiplicityElement"/>
        </target>
      </audits>
      <audits
          name="MultiplicityElementConstraint2"
          id="MultiplicityElementConstraint2"
          useInLiveMode="true"
          message="The maximum cardinality constraint (the property upper) must be a cardinal number, where the number -1 represents ℵ0 (aleph-zero), the smallest infinite cardinal number.">
        <rule
            body="(self.upper >= 0) or (self.upper = -1)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MultiplicityElement"/>
        </target>
      </audits>
      <audits
          name="MultiplicityElementConstraint3*"
          description="As the decorations for this constraint cannot be shown in a Link Label, this constraint had to be implemented in DirectedBinaryRelationshipConstraint5a*, DirectedBinaryRelationshipConstraint5b* and AssociationConstraint1*."
          id="MultiplicityElementConstraint3*"
          message="The maximum cardinality constraint (the property upper) must be equal or&#xA;greater to the lower cardinality constraint (the property lower).">
        <rule
            body="true -- if (lower &lt;> -1) then ((self.upper >= self.lower) or (self.upper = -1)) else (self.upper = -1) endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//MultiplicityElement"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Phase"
        name="Phase"
        description="Phase">
      <audits
          name="PhaseConstraint1"
          description="An equivalent constraint (slightly wider) is implemented by CategoryConstraint1 + SubkindConstraint1 + SubstanceSortalConstraint3."
          id="PhaseConstraint1"
          message="A class stereotyped as «phase» cannot be a supertype of a class stereotyped as «category», «collective», «kind», «subkind» or «quantity», because an anti-rigid class cannot be a supertype of a rigid class.">
        <rule
            body="true -- if (self.specific.oclIsKindOf(RigidSortalClass) or self.specific.oclIsKindOf(Category)) then not self.general.oclIsKindOf(Phase) else true endif -- An equivalent constraint (slightly wider) is implemented by CategoryConstraint1 + SubkindConstraint1 + SubstanceSortalConstraint3."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Phase"/>
        </target>
      </audits>
      <audits
          name="PhaseConstraint2"
          id="PhaseConstraint2"
          message="The classes stereotyped as «phase» must form a phase-partition of a class C&#xA;stereotyped as «collective», «kind» or «quantity» (a Substance Sortal class).&#xA;Therefore, there must exist an unique GeneralizationSet which contains the&#xA;generalizations from the classes stereotyped as «phase» to the class C (by&#xA;having its meta-reference &quot;generalizations&quot; pointing to these generalizations)&#xA;and in which the properties isDisjoint = true and isComplete = true.">
        <rule
            body="let general_substance_sortal : SubstanceSortal = Generalization.allInstances()->select(x | (x.specific = self) and (x.general.oclIsKindOf(SubstanceSortal)))->collect(x | x.general.oclAsType(SubstanceSortal))->any(true) in (let phase_generalizations : Set(Generalization) = Generalization.allInstances()->select(x | (x.general = general_substance_sortal) and (x.specific.oclIsKindOf(Phase))) in (let phase_generalization_sets : Set(GeneralizationSet) = GeneralizationSet.allInstances()->select(x | x.generalization->includesAll(phase_generalizations)) in (if (general_substance_sortal.oclIsUndefined() or (phase_generalizations->size() = 1)) then true else ((phase_generalization_sets->size() = 1) and (phase_generalization_sets->forAll(x | (x.isCovering = true) and (x.isDisjoint = true)))) endif)))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Phase"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Property"
        name="Property"
        description="Property">
      <audits
          name="PropertyConstraint1"
          id="PropertyConstraint1"
          useInLiveMode="true"
          message="An association stereotyped as «datatypeRelationship» must not permit the existence of optional attributes, i.e., attributes with minimum cardinalities equal to zero.">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then ((x.oclAsType(Property).lower >= 1) or (x.oclAsType(Property).lower = -1)) else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//DatatypeRelationship"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Relator"
        name="Relator"
        description="Relator">
      <audits
          name="RelatorConstraint1"
          id="RelatorConstraint1"
          message="A class stereotyped as «relator» must be (directly or indirectly) connected to an&#xA;association end of at least one «mediation» relationship.">
        <rule
            body="Mediation.allInstances()->exists(x | x.isConected(self) or self.allSuperTypes()->exists(y | x.isConected(y)))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Relator"/>
        </target>
      </audits>
      <audits
          name="RelatorConstraint2"
          id="RelatorConstraint2"
          message="A class stereotyped as «relator» must be mediating (by&#xA;being (directly or indirectly) connected to association ends&#xA;of relationships stereotyped as «mediation») at least two&#xA;disjoint elements.">
        <rule
            body="Mediation.allInstances()->select(x | x.source->exists(y | if y.oclIsKindOf(Property) then ((y.oclAsType(Property).endType = self) or self.allSuperTypes()->includes(y.oclAsType(Property).endType)) else false endif))->collect(z | z.target->collect(w | if w.oclIsKindOf(Property) then (if (w.oclAsType(Property).lower = -1) then 2 else w.oclAsType(Property).lower endif) else 0 endif)->sum())->sum() >= 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Relator"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="Role"
        name="Role"
        description="Role">
      <audits
          name="RoleConstraint1"
          description="An equivalent constraint (slightly wider) is implemented by CategoryConstraint1 + SubkindConstraint1 + SubstanceSortalConstraint3."
          id="RoleConstraint1"
          useInLiveMode="true"
          message="A class stereotyped as «role» cannot be a supertype of a class stereotyped as «category», «collective», «kind», «subkind» or «quantity», because an anti-rigid class cannot be a supertype of a rigid class.">
        <rule
            body="true -- if (self.specific.oclIsKindOf(RigidSortalClass) or self.specific.oclIsKindOf(Category)) then not self.general.oclIsKindOf(Role) else true endif -- An equivalent constraint (slightly wider) is implemented by CategoryConstraint1 + SubkindConstraint1 + SubstanceSortalConstraint3."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Role"/>
        </target>
      </audits>
      <audits
          name="RoleConstraint2"
          id="RoleConstraint2"
          message="A class stereotyped as «role» must be connected to an&#xA;association end of a relationship stereotyped as «mediation».">
        <rule
            body="Mediation.allInstances()->exists(x | x.target->exists(y | if y.oclIsKindOf(Property) then ((y.oclAsType(Property).endType = self) or (self.allSuperTypes()->includes(y.oclAsType(Property).endType))) else false endif))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Role"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="RoleMixin"
        name="RoleMixin"
        description="RoleMixin">
      <audits
          name="RoleMixinConstraint1"
          id="RoleMixinConstraint1"
          message="A class stereotyped as «roleMixin» must be connected to an&#xA;association end of a relationship stereotyped as «mediation».">
        <rule
            body="Mediation.allInstances()->exists(x | x.target->exists(y | if y.oclIsKindOf(Property) then (y.oclAsType(Property).endType = self) else false endif))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//RoleMixin"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="StructuralDatatype"
        name="StructuralDatatype"
        description="StructuralDatatype">
      <audits
          name="StructuralDatatypeConstraint1*"
          id="StructuralDatatypeConstraint1*"
          message="A class stereotyped as «structuralDatatype» must have at&#xA;least two disjoint attributes (a class can have attributes by&#xA;means of relationships stereotyped as «datatypeRelationship»).">
        <rule
            body="DatatypeRelationship.allInstances()->collect(x | if x.source->exists(y | if y.oclIsKindOf(Property) then (y.oclAsType(Property).endType = self) else false endif) then x.target->collect(z | if z.oclIsKindOf(Property) then (if (z.oclAsType(Property).lower = -1) then 2 else z.oclAsType(Property).lower endif) else 0 endif)->sum() else 0 endif)->sum() >= 2"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//StructuralDatatype"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="subCollectionOf"
        name="subCollectionOf"
        description="subCollectionOf">
      <audits
          name="subCollectionOfConstraint1a"
          id="subCollectionOfConstraint1a"
          useInLiveMode="true"
          message="The classes connected to the association end relative to the whole individual must represent universals whose instances are collectives. A universal X is a universal whose instances are collectives if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «collective» or be a subtype of a class stereotyped as «collective»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «quantity», and Y cannot be a subtype of class stereotyped as either «kind» or «quantity».">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasCollectivesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subCollectionOf"/>
        </target>
      </audits>
      <audits
          name="subCollectionOfConstraint1b"
          id="subCollectionOfConstraint1b"
          useInLiveMode="true"
          message="The classes connected to the association end relative to the part must represent universals whose instances are collectives. A universal X is a universal whose instances are collectives if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «collective» or be a subtype of a class stereotyped as «collective»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «quantity», and Y cannot be a subtype of class stereotyped as either «kind» or «quantity».">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasCollectivesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subCollectionOf"/>
        </target>
      </audits>
      <audits
          name="subCollectionOfConstraint2"
          id="subCollectionOfConstraint2"
          useInLiveMode="true"
          message="In a relationship stereotyped as «subCollectionOf», the maximum cardinality constraint in the association end connected to the part must be one (the property upper = 1).">
        <rule
            body="if self.target.oclIsKindOf(subCollectionOf) then self.upper = 1 else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="SubKind"
        name="SubKind"
        description="SubKind">
      <audits
          name="SubKindConstraint1"
          id="SubKindConstraint1"
          useInLiveMode="true"
          message="A class stereotyped as «subkind» cannot be a subtype of a class stereotyped as «phase», «role» or «roleMixin», because a rigid class cannot be a subtype of an anti-rigid class.">
        <rule
            body="if self.specific.oclIsKindOf(SubKind) then not (self.general.oclIsKindOf(AntiRigidSortalClass) or self.general.oclIsKindOf(RoleMixin)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="subQuantityOf"
        name="subQuantityOf"
        description="subQuantityOf">
      <audits
          name="subQuantityOfConstraint1"
          id="subQuantityOfConstraint1"
          useInLiveMode="true"
          message="A relationship stereotyped as «subQuantityOf» is always non-shareable (the property isShareable = false).">
        <rule
            body="self.isShareable = false"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subQuantityOf"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint2a"
          id="subQuantityOfConstraint2a"
          useInLiveMode="true"
          message="A relationship stereotyped as «subQuantityOf» must have the property isEssential = true, because classes stereotyped as «quantity» are extensional individuals.">
        <rule
            body="self.isEssential = true"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subQuantityOf"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint2b*"
          id="subQuantityOfConstraint2b*"
          useInLiveMode="true"
          message="A relationship stereotyped as «subQuantityOf» must have the property isImmutablePart = true, because these relationships are always essential (i.e., the property isEssential = true).">
        <rule
            body="self.isImmutablePart = true -- Extension of Constraint 2 with the new meta-attribute isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subQuantityOf"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint2c*"
          id="subQuantityOfConstraint2c*"
          useInLiveMode="true"
          message="In a relationship stereotyped as «subQuantityOf», the Properties related to the parts must have the property isReadOnly = true, because these parts are always immutable (i.e., the property isImmutablePart = true).">
        <rule
            body="if self.target.oclIsKindOf(subQuantityOf) then self.isReadOnly else true endif -- Extension of Constraint 2 with the new meta-attribute isImmutablePart."/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint3"
          id="subQuantityOfConstraint3"
          useInLiveMode="true"
          message="In a relationship stereotyped as «subQuantityOf», the maximum&#xA;cardinality constraint in the association end connected to the part&#xA;must be one (the property upper = 1).">
        <rule
            body="if self.target.oclIsKindOf(subQuantityOf) then self.upper = 1 else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Property"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint4a"
          id="subQuantityOfConstraint4a"
          useInLiveMode="true"
          message="The classes connected to the association end relative to the whole individual must represent universals whose instances are quantities. A universal X is a universal whose instances are quantities if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «quantity» or be a subtype of a class stereotyped as «quantity»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «collective», and Y cannot be a subtype of class stereotyped as either «kind» or «collective».">
        <rule
            body="self.source->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasQuantitiesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subQuantityOf"/>
        </target>
      </audits>
      <audits
          name="subQuantityOfConstraint4b"
          id="subQuantityOfConstraint4b"
          useInLiveMode="true"
          message="The classes connected to the association end relative to the part must represent universals whose instances are quantities. A universal X is a universal whose instances are quantities if it satisfies the following conditions: (i) If X is a sortal universal, then it must be either stereotyped as «quantity» or be a subtype of a class stereotyped as «quantity»; (ii) Otherwise, if X is a mixin universal, then for all classes Y such that Y is a subtype of X, we have that Y cannot be either stereotyped as «kind» or «collective», and Y cannot be a subtype of class stereotyped as either «kind» or «collective».">
        <rule
            body="self.target->forAll(x | if x.oclIsKindOf(Property) then x.oclAsType(Property).endType.hasQuantitiesInstances() else false endif)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//subQuantityOf"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="SubstanceSortal"
        name="SubstanceSortal"
        description="SubstanceSortal">
      <audits
          name="SubstanceSortalConstraint1"
          id="SubstanceSortalConstraint1"
          message="The classes which are not abstract (which have the property isAbstract = false)&#xA;and which are not stereotyped as «collective», «kind», «quantity», «mode» or&#xA;«relator» (i.e., which are not substance sortal classes or moment classes) must&#xA;have at least one class stereotyped as «collective», «kind» or «quantity» as&#xA;supertype.">
        <rule
            body="if ((self.isAbstract = false) and not self.oclIsKindOf(SubstanceSortal)) then self.allSuperTypes()->exists(x | x.oclIsKindOf(SubstanceSortal)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//ObjectClass"/>
        </target>
      </audits>
      <audits
          name="SubstanceSortalConstraint2a"
          id="SubstanceSortalConstraint2a"
          useInLiveMode="true"
          message="Any stereotyped class must not include in its general collection more than one class stereotyped as «collective», «kind» or «quantity» (the substance sortal classes). So, verify if the class connected to the source association end of the generalization relationship or one of its subtypes (in case it has subtypes) are already (directly or indirectly) a subtype of a substance sortal class.">
        <rule
            body="self.specific.allSubTypes()->including(self.specific)->forAll(x | x.allSuperTypes()->select(y | y.oclIsKindOf(SubstanceSortal))->size() &lt;= 1)"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
      <audits
          name="SubstanceSortalConstraint2b"
          id="SubstanceSortalConstraint2b"
          useInLiveMode="true"
          message="A class stereotyped as «collective», «kind» or «quantity» (the substance sortal classes) cannot have as a supertype a class stereotyped as «kind», «subkind», «quantity» or «collective» (the rigid sortal classes), because a substance sortal has its own principle of identity and cannot inherit another principle of identity from other rigid sortal.">
        <rule
            body="if self.specific.oclIsKindOf(SubstanceSortal) then not self.general.oclIsKindOf(RigidSortalClass) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
      <audits
          name="SubstanceSortalConstraint3"
          id="SubstanceSortalConstraint3"
          useInLiveMode="true"
          message="A class stereotyped as «collective», «kind» or «quantity» (the substance sortal classes) cannot be a subtype of a class stereotyped as «phase», «role» or «roleMixin», because a rigid class cannot be a subtype of an anti-rigid class.">
        <rule
            body="if self.specific.oclIsKindOf(SubstanceSortal) then not (self.general.oclIsKindOf(AntiRigidSortalClass) or self.general.oclIsKindOf(RoleMixin)) else true endif"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="OntoUML.ecore#//Generalization"/>
        </target>
      </audits>
    </childContainers>
  </audits>
</gmfmap:Mapping>
